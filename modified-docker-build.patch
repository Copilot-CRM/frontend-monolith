diff --git a/Dockerfile b/Dockerfile
index 35c3553..a338ff3 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,56 +1,90 @@
+ARG NODE_IMAGE=node:18-alpine
+
+################################################################################
+# build
+################################################################################
 # Base image for building dependencies and building the app
-FROM node:18-alpine AS builder
+FROM ${NODE_IMAGE} AS builder
 
 # Install pnpm and turbo globally
 RUN npm install -g pnpm turbo
 
 # Set working directory
-WORKDIR /app
+WORKDIR /workspace
 
 # Copy lockfile and workspace config for dependency installation
-COPY ../../pnpm-lock.yaml ../../package.json ../../pnpm-workspace.yaml ./
+COPY pnpm-lock.yaml package.json pnpm-workspace.yaml turbo.json .npmrc ./
+COPY apps/client-portal/package.json apps/client-portal/package.json
+COPY apps/copilot-crm/package.json apps/copilot-crm/package.json
+COPY packages/mocks/package.json packages/mocks/package.json
+COPY packages/types/package.json packages/types/package.json
+COPY packages/typescript-config packages/typescript-config
+COPY packages/ui/package.json packages/ui/package.json
 
 # Install all dependencies
 RUN pnpm install --frozen-lockfile
 
-# Copy the whole repo
-COPY ../../ ./
+# Copy apps
+COPY apps apps
+COPY packages/mocks packages/mocks
+COPY packages/types packages/types
+COPY packages/ui packages/ui
 
-# Build the specific app (using an argument to specify the app)
-ARG APP_NAME
-RUN turbo run build --filter="@repo/${APP_NAME}"
+# Build apps
+RUN pnpm turbo run build
 
-# Production image
-FROM node:18-alpine AS runner
+################################################################################
+# base
+################################################################################
+FROM ${NODE_IMAGE} AS base
 
-# Install pnpm globally in the runner stage
-RUN npm install -g pnpm
+# Set environment variables
+ENV NODE_ENV=production
+ENV PORT=3000
+ENV PATH=/workspace/node_modules/.bin:$PATH
 
 # Set working directory
-WORKDIR /app
-
-ARG APP_NAME
+WORKDIR /workspace
 
 # Copy the relevant app files from the builder stage
-COPY --from=builder /app/apps/${APP_NAME}/.next .next
-COPY --from=builder /app/apps/${APP_NAME}/package.json .
+COPY --from=builder /workspace/node_modules node_modules
 
-# Copy only the production dependencies
-COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml
-COPY --from=builder /app/pnpm-workspace.yaml ./pnpm-workspace.yaml
-COPY --from=builder /app/packages ./packages
+################################################################################
+# client-portal
+################################################################################
+FROM base AS client-portal
 
-# Reinstall production dependencies to ensure all needed modules are there
-RUN pnpm install --prod --filter="@repo/${APP_NAME}"
+ENV PATH=/workspace/apps/client-portal/node_modules/.bin:$PATH
 
-# Set environment variables
-ENV NODE_ENV=production
-ENV PORT=3000
-# Add node_modules/.bin to PATH to ensure commands like "next" can be found
-ENV PATH=/app/node_modules/.bin:$PATH
+WORKDIR /workspace/apps/client-portal
+
+COPY --from=builder /workspace/apps/client-portal/node_modules node_modules
+COPY --from=builder /workspace/apps/client-portal/package.json package.json
+COPY --from=builder /workspace/apps/client-portal/.next .next
+COPY --from=builder /workspace/apps/client-portal/.turbo .turbo
+
+# Expose the application port
+EXPOSE 3000
+
+# Start the application
+CMD ["npm", "run", "start"]
+
+################################################################################
+# copilot-crm
+################################################################################
+FROM base AS copilot-crm
+
+ENV PATH=/workspace/apps/copilot-crm/node_modules/.bin:$PATH
+
+WORKDIR /workspace/apps/copilot-crm
+
+COPY --from=builder /workspace/apps/copilot-crm/node_modules node_modules
+COPY --from=builder /workspace/apps/copilot-crm/package.json package.json
+COPY --from=builder /workspace/apps/copilot-crm/.next .next
+COPY --from=builder /workspace/apps/copilot-crm/.turbo .turbo
 
 # Expose the application port
 EXPOSE 3000
 
 # Start the application
-CMD ["pnpm", "start"]
+CMD ["npm", "run", "start"]
diff --git a/package.json b/package.json
index 9bde7bc..5e7be24 100644
--- a/package.json
+++ b/package.json
@@ -4,11 +4,11 @@
   "private": true,
   "license": "MIT",
   "scripts": {
-    "docker:build:client-portal": "docker build . -t client-portal:latest --build-arg APP_NAME=client-portal",
+    "docker:build:client-portal": "docker build . -t client-portal:latest --target client-portal",
     "docker:run:client-portal": "docker run -p 3000:3000 client-portal:latest",
     "docker:push:client-portal": "docker push client-portal:latest",
-    "docker:build:copilot-crm": "docker build . -t copilot-crm:latest --build-arg APP_NAME=copilot-crm",
-    "docker:run:copilot-crm": "docker run -p 3000:3000 copilot-crm:latest",
+    "docker:build:copilot-crm": "docker build . -t copilot-crm:latest --target copilot-crm",
+    "docker:run:copilot-crm": "docker run -p 3001:3000 copilot-crm:latest",
     "docker:push:copilot-crm": "docker push copilot-crm:latest",
     "analyze": "turbo analyze",
     "build": "turbo build",
